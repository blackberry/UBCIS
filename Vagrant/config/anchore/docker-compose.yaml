---
version: '2.1'
volumes:
  anchore-db-volume:
    # Set this to 'true' to use an external volume. In which case, it must be created manually with "docker volume create anchore-db-volume"
    external: false

  anchore-scratch: {}

services:
  # The primary API endpoint service
  engine-api:
    image: anchore/anchore-engine:v0.7.0
    depends_on:
    - anchore-db
    - engine-catalog
    #volumes:
    #- ./config-engine.yaml:/config/config.yaml:z
    ports:
    - "8228:8228"
    logging:
      driver: "json-file"
      options:
        max-size: 100m
    environment:
    - ANCHORE_ENDPOINT_HOSTNAME=engine-api
    - ANCHORE_DB_HOST=anchore-db
    - ANCHORE_DB_PASSWORD=mysecretpassword
    - ANCHORE_LOG_LEVEL=INFO
    command: ["anchore-manager", "service", "start", "apiext"]

  # Catalog is the primary persistence and state manager of the system
  engine-catalog:
    image: anchore/anchore-engine:v0.7.0
    depends_on:
    - anchore-db
    #volumes:
    #- ./config-engine.yaml:/config/config.yaml:z
    logging:
      driver: "json-file"
      options:
        max-size: 100m
    expose:
    - 8228
    environment:
    - ANCHORE_ENDPOINT_HOSTNAME=engine-catalog
    - ANCHORE_DB_HOST=anchore-db
    - ANCHORE_DB_PASSWORD=mysecretpassword
    - ANCHORE_LOG_LEVEL=INFO
    command: ["anchore-manager", "service", "start", "catalog"]
  engine-simpleq:
    image: anchore/anchore-engine:v0.7.0
    depends_on:
    - anchore-db
    - engine-catalog
    #volumes:
    #- ./config-engine.yaml:/config/config.yaml:z
    expose:
    - 8228
    logging:
      driver: "json-file"
      options:
        max-size: 100m
    environment:
    - ANCHORE_ENDPOINT_HOSTNAME=engine-simpleq
    - ANCHORE_DB_HOST=anchore-db
    - ANCHORE_DB_PASSWORD=mysecretpassword
    - ANCHORE_LOG_LEVEL=INFO
    command: ["anchore-manager", "service", "start", "simplequeue"]
  engine-policy-engine:
    image: anchore/anchore-engine:v0.7.0
    depends_on:
    - anchore-db
    - engine-catalog
    #volumes:
    #- ./config-engine.yaml:/config/config.yaml:z
    expose:
    - 8228
    logging:
      driver: "json-file"
      options:
        max-size: 100m
    environment:
    - ANCHORE_ENDPOINT_HOSTNAME=engine-policy-engine
    - ANCHORE_DB_HOST=anchore-db
    - ANCHORE_DB_PASSWORD=mysecretpassword
    - ANCHORE_LOG_LEVEL=INFO
    command: ["anchore-manager", "service", "start", "policy_engine"]
  engine-analyzer:
    image: anchore/anchore-engine:v0.7.0
    depends_on:
    - anchore-db
    - engine-catalog
    #volumes:
    #- ./config-engine.yaml:/config/config.yaml:z
    expose:
    - 8228
    logging:
      driver: "json-file"
      options:
        max-size: 100m
    environment:
    - ANCHORE_ENDPOINT_HOSTNAME=engine-analyzer
    - ANCHORE_DB_HOST=anchore-db
    - ANCHORE_DB_PASSWORD=mysecretpassword
    - ANCHORE_LOG_LEVEL=INFO
    volumes:
    - anchore-scratch:/analysis_scratch
    command: ["anchore-manager", "service", "start", "analyzer"]
  anchore-db:
    image: "anchore/engine-db-preload:v0.7.0"
    volumes:
    - anchore-db-volume:/var/lib/postgresql/data
    environment:
    - POSTGRES_PASSWORD=mysecretpassword
    expose:
    - 5432
    logging:
      driver: "json-file"
      options:
        max-size: 100m

# Uncomment this section to add a prometheus instance to gather metrics. This is mostly for quickstart to demonstrate prometheus metrics exported
#  anchore-prometheus:
#      image: docker.io/prom/prometheus:latest
#      depends_on:
#       - engine-api
#      volumes:
#       - ./anchore-prometheus.yml:/etc/prometheus/prometheus.yml:z
#      logging:
#       driver: "json-file"
#       options:
#        max-size: 100m
#      ports:
#       - "9090:9090"

# Uncomment this section to run a swagger UI service, for inspecting and interacting with the anchore engine API via a browser (http://localhost:8080 by default, change if needed in both sections below)
#  anchore-swagger-ui-nginx:
#    image: docker.io/nginx:latest
#    depends_on:
#     - engine-api
#     - anchore-swagger-ui
#    ports:
#     - "8080:8080"
#    volumes:
#     - ./anchore-swaggerui-nginx.conf:/etc/nginx/nginx.conf:z
#    logging:
#     driver: "json-file"
#     options:
#      max-size: 100m
#  anchore-swagger-ui:
#    image: docker.io/swaggerapi/swagger-ui
#    environment:
#      - URL=http://localhost:8080/v1/swagger.json
#    logging:
#     driver: "json-file"
#     options:
#      max-size: 100m